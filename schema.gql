# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  dateCreated: DateTime!
  id: ID!
  name: String!
  tasks: [Task!]
  user: User
  userId: Float
}

input CreateCategoryInput {
  name: String!
}

input CreateTaskInput {
  categoryId: Int!
  dateEnd: String!
  dateStart: String!
  name: String!
}

input CreateUserInput {
  email: String!
  password: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type LoginResponse {
  access_token: String!
  user: User!
}

input LoginUserInput {
  email: String!
  password: String!
}

type Mutation {
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  createTask(createTaskInput: CreateTaskInput!): Task!
  createUser(createUserInput: CreateUserInput!): User!
  login(loginUserInput: LoginUserInput!): LoginResponse!
  removeCategory(id: Int!): Category!
  removeTask(id: Int!): Task!
  updateCategory(updateCategoryInput: UpdateCategoryInput!): Category!
  updateTask(id: Float!, updateTaskInput: UpdateTaskInput!): Task!
}

type Query {
  categories: [Category!]!
  category(id: Float!): Category!
  findAll: [User!]!
  findOne(email: String!): User!
  task(id: Int!): Task!
  tasks(id: Int!): [Task!]!
}

type Task {
  categories: Category!
  categoryId: Float
  dateEnd: String!
  dateStart: String!
  id: ID!
  name: String!
}

input UpdateCategoryInput {
  id: Int!
  name: String!
}

input UpdateTaskInput {
  categoryId: Int!
  dateEnd: String
  dateStart: String
  name: String
}

type User {
  categories: [Category!]
  email: String!
  id: ID!
  password: String!
  tasks: [Task!]!
  user: Float!
}